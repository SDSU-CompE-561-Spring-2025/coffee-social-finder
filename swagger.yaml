openapi: 3.0.3
info:
  title: Swagger Cafe Finder - OpenAPI 3.0
  description: |-
    This is a Cafe Finder Server based on the OpenAPI 3.0 specification.
  version: 1.0.11
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
- name: "User"
- name: "Comments"
- name: "Bookmark"
- name: "Filtered Tags"
- name: "Cosmetic"
- name: "Restaurant"
- name: "Address"
paths:
  /api/users:
    get:
      tags: 
      - User
      summary: "Retrieve a list of users"
      responses: 
        200: 
          description: "List of users"
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    bookmark_id:
                      type: integer
                    filtered_tags_id:
                      type: integer
                    cosmetics_id:
                      type: integer
    post:
      tags: 
      - User
      summary: "Create a new user"
      parameters:
        - name: name
          in: query  
          description: Input name
          required: true
          schema:
            type: string
            required:
            - name
        - name: email
          in: query  
          description: Input name
          required: true
          schema:
            type: string
            format: email
            required:
            - email
        - name: password
          in: query  
          description: Input name
          required: true
          schema:
            type: string
            required:
            - password
      responses:
        201:
          description: "Successfuly created user"
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
                    id: 
                      type: integer
                    name:
                      type: string
                    email:
                      type: string
                      format: email
  /api/users/{id}:
    put:
      tags:
      - User
      summary: "Edit user information"
      parameters:
        - name: name
          in: query  
          description: Input name
          required: true
          schema:
            type: string
            required:
            - name
        - name: email
          in: query  
          description: Input name
          required: true
          schema:
            type: string
            format: email
            required:
            - email
      responses:
        200:
          description: "Successfuly updated user"
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
    delete:
      tags:
      - User
      summary: "Delete a user"
      responses:
        200:
          description: "Successfuly deleted user"
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
  /api/TagsPage:
    get:
      tags: 
      - Filtered Tags
      summary: "Retrieve a list of tags"
      responses: 
        200: 
          description: "List of users"
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    tag: 
                      type: string
                    id:
                      type: integer
  /api/TagsPage/{id}:
    put:
      tags:
      - Filtered Tags
      summary: "Edit tag preference"
      parameters:
        - name: tag
          in: query  
          description: Input tag
          required: true
          schema:
            type: string
            required:
            - tag
      responses:
        200:
          description: "Successfuly updated user tag preference"
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean
    delete:
      tags:
      - Filtered Tags
      summary: "Delete a tag preference"
      responses:
        200:
          description: "Successfuly deleted user tag preference"
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    success:
                      type: boolean